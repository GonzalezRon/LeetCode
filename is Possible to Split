You are given an integer array nums of even length. You have to split the array into two parts nums1 and nums2 such that:

nums1.length == nums2.length == nums.length / 2.
nums1 should contain distinct elements.
nums2 should also contain distinct elements.
Return true if it is possible to split the array, and false otherwise.

Example 1:

Input: nums = [1,1,2,2,3,4]
Output: true
Explanation: One of the possible ways to split nums is nums1 = [1,2,3] and nums2 = [1,2,4].


/**
 * @param {number[]} nums
 * @return {boolean}
 */
var isPossibleToSplit = function(nums) {
    // insert elements into map 
    // check map add to counter ||  set counter 
    // if counter is over 2 then return false 
    // else true (rule perameters made this pattern stand out most)
    let map = new Map()  

    for(let n of nums){
    
        if(!map.has(n)){                    
            map.set(n, 1)                   // classic map & counter /set and get 
        }else{
            map.set(n,map.get(n) + 1)
        }
        if(map.get(n) > 2 ){
            return false
        }
    }
    return true;
};
