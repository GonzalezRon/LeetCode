Fizz Buzz 

Given an integer n, return a string array answer (1-indexed) where:

answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
answer[i] == "Fizz" if i is divisible by 3.
answer[i] == "Buzz" if i is divisible by 5.
answer[i] == i (as a string) if none of the above conditions are true.
 

Example 1:

Input: n = 3
Output: ["1","2","Fizz"]


var fizzBuzz = function(n) {
  let arr = []
  let j = 0
    for (let i = 0; i < n; i++){
        j = i + 1;
    if(j % 3 == 0 && j % 5 == 0){
        arr[i] = "FizzBuzz"
    }else if (j % 3 == 0){
        arr[i] = "Fizz"
    }else if (j % 5 == 0){
        arr[i] = "Buzz"

    }else
        arr[i] = j.toString()
    }
    return arr
};




// UPDATE: LEARNING RECURSION: WITH FIZZBUZZ // 

Solving fizzBuzz with recursion and without a for loop



function fizzBuzz(myInt){
        let result = []; 
        
        const recurse=(n)=>{
   // base-case
            if( n > myInt){
                return result;
            }

   // to successfully push into the result array,
   // the blocks must use 'if', 'else if', and 'else'

            if(n%3 === 0 && n%5 === 0){
                result.push("fizzBuzz")
            }
            else if(n%3 === 0){
                result.push("fizz")             
            }
            else if(n&5 === 0){
                result.push("Buzz")            
            }
            else{
                result.push(n)
            }
            recurse(n + 1)
        }        
        recurse(1)
        return result; 
}

console.log(fizzBuzz(15))
 




