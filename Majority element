Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2


var FIRSTmajorityElement = function(nums) {
    let total = Math.floor(nums.length/2), map = new Map()
  for(let num of nums) {
        map.set(num, (map.get(num)||0)+1)     
        if(map.get(num) > total){
            return num
        }
    }
    return nums
};

const SECONDmajorityElement = function(nums){
    const object= {}
    for(let num of nums){
        object[num] = (object[num] || 0) + 1
        if(object[num] > nums.length/2){
            return num
        }
    }return nums
}


const THIRDmajorityElement = function(nums){
    let compareLength = nums.length/2, map = new Map()
    for(let num of nums){
        map.set(num, (map.get(num)||0)+1)
        if(map.get(num) > nums.length/2) return num
    }

}


const majorityElement = function(nums){
   let count = 0, hold = nums[0]
   for(let num of nums){
        if(hold === num ) count++
        else if(count === 0) hold = num
        else count -- 
   }return hold
}
